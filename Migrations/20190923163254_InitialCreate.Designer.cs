// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviePostersAPI.Services;

namespace movie_posters.Migrations
{
    [DbContext(typeof(MoviePostersDbContext))]
    [Migration("20190923163254_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoviePostersAPI.Entities.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Year");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviePostersAPI.Entities.MoviePoster", b =>
                {
                    b.Property<int>("MoviePosterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Artist")
                        .IsRequired();

                    b.Property<int>("MovieId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PosterImageUrl")
                        .IsRequired();

                    b.Property<int>("Rating");

                    b.Property<int>("RatingCount");

                    b.Property<int>("Year");

                    b.HasKey("MoviePosterId");

                    b.HasIndex("MovieId");

                    b.ToTable("MoviePosters");
                });

            modelBuilder.Entity("MoviePostersAPI.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(255);

                    b.Property<int>("MoviePosterId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("PostedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CONVERT(date, GETDATE())");

                    b.Property<int?>("Rating");

                    b.HasKey("ReviewId");

                    b.HasIndex("MoviePosterId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("MoviePostersAPI.Entities.MoviePoster", b =>
                {
                    b.HasOne("MoviePostersAPI.Entities.Movie", "Movie")
                        .WithMany("MoviePosters")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoviePostersAPI.Entities.Review", b =>
                {
                    b.HasOne("MoviePostersAPI.Entities.MoviePoster", "MoviePoster")
                        .WithMany("Reviews")
                        .HasForeignKey("MoviePosterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
